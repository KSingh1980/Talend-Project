-- CREATE STAGE TABLES

DROP TABLE STAGE.PROMOTIONS;
DROP TABLE STAGE.CUSTOMER_EXT;
DROP TABLE STAGE.CUSTOMER_INT;
DROP TABLE STAGE.CHANNELS;
DROP TABLE STAGE.SALES;
DROP TABLE STAGE.PRODUCTS;

CREATE TABLE STAGE.PROMOTIONS
(
  PROMO_ID INTEGER
, PROMO_NAME VARCHAR(30)
, PROMO_SUBCATEGORY VARCHAR(30)
, PROMO_CATEGORY VARCHAR(30)
, PROMO_COST FLOAT
, PROMO_BEGIN_DATE DATE
, PROMO_END_DATE DATE
, PRIMARY KEY(PROMO_ID)
);

CREATE TABLE STAGE.CUSTOMER_EXT
(
  CUST_ID INTEGER
, CUST_GENDER VARCHAR(1)
, CUST_YEAR_OF_BIRTH INTEGER
, CUST_MARITAL_STATUS VARCHAR(30)
, CUST_INCOME_LEVEL VARCHAR(100)
, CUST_CREDIT_LIMIT INTEGER
, PRIMARY KEY(CUST_ID)
);


CREATE TABLE STAGE.CUSTOMER_INT
(
  CUST_ID INTEGER
, CUST_FIRST_NAME VARCHAR(50)
, CUST_LAST_NAME VARCHAR(50)
, CUST_GENDER VARCHAR(1)
, CUST_MAIN_PHONE_NUMBER VARCHAR(50)
, CUST_EMAIL VARCHAR(50)
, CUST_STREET_ADDRESS VARCHAR(100)
, CUST_POSTAL_CODE INTEGER
, CUST_CITY VARCHAR(50)
, CUST_STATE_PROVINCE VARCHAR(50)
, COUNTRY_ID INTEGER
, COUNTRY_NAME VARCHAR(100)
, COUNTRY_SUBREGION VARCHAR(50)
, COUNTRY_REGION VARCHAR(50)
, PRIMARY KEY(CUST_ID)
);

CREATE TABLE STAGE.CHANNELS
(
  CHANNEL_ID INTEGER
, CHANNEL_DESC VARCHAR(100)
, CHANNEL_CLASS VARCHAR(100)
, PRIMARY KEY(CHANNEL_ID)
);

CREATE TABLE STAGE.SALES
(
  SALESTRANS_ID INTEGER
, PROD_ID INTEGER
, CUST_ID INTEGER
, CHANNEL_ID INTEGER
, PROMO_ID INTEGER
, SALE_DATE DATE
, SHIPPING_DATE DATE
, PAYMENT_DATE DATE
, QUANTITY_SOLD INTEGER
, AMOUNT_SOLD FLOAT
, UNIT_PRICE FLOAT
, PRIMARY KEY(SALESTRANS_ID)
);

CREATE TABLE STAGE.PRODUCTS
(
  PROD_ID INTEGER
, PROD_NAME VARCHAR(100)
, PROD_DESC VARCHAR(100)
, PROD_SUBCATEGORY VARCHAR(100)
, PROD_SUBCAT_DESC VARCHAR(100)
, PROD_CATEGORY VARCHAR(100)
, PROD_CAT_DESC VARCHAR(100)
, PROD_WEIGHT_CLASS INTEGER
, PROD_UNIT_OF_MEASURE VARCHAR(1)
, PROD_PACK_SIZE VARCHAR(1)
, PROD_STATUS VARCHAR(10)
, PROD_LIST_PRICE FLOAT
, PROD_MIN_PRICE FLOAT
, PRIMARY KEY(PROD_ID)
);

-- TARGET
DROP TABLE TARGET.CHANNELS;
DROP TABLE TARGET.REGION;
DROP TABLE TARGET.SUBREGION;
DROP TABLE TARGET.COUNTRY;
DROP TABLE TARGET.STATE;
DROP TABLE TARGET.CITY;
DROP TABLE TARGET.CUSTOMERS;
DROP TABLE TARGET.PROD_CATEGORY;
DROP TABLE TARGET.PROD_SUBCATEGORY;
DROP TABLE TARGET.PRODUCTS;
DROP TABLE TARGET.PROMO_CATEGORY;
DROP TABLE TARGET.PROMO_SUBCATEGORY;
DROP TABLE TARGET.PROMOTIONS;

CREATE TABLE TARGET.CHANNELS
(
  CHANNEL_ID INTEGER NOT NULL
, CHANNEL_DESC VARCHAR(20) NOT NULL
, CHANNEL_CLASS VARCHAR(20)
, PRIMARY KEY(CHANNEL_ID)
, CHECK(CHANNEL_CLASS IN ('Direct','Indirect','Others'))
);

CREATE TABLE TARGET.REGION
(
  COUNTRY_REGION_ID INTEGER
, COUNTRY_REGION VARCHAR(20)
, PRIMARY KEY(COUNTRY_REGION_ID)
);

CREATE TABLE TARGET.SUBREGION
(
  COUNTRY_SUBREGION_ID INTEGER
, COUNTRY_REGION_ID INTEGER
, COUNTRY_SUBREGION VARCHAR(20)
, PRIMARY KEY(COUNTRY_SUBREGION_ID)
, FOREIGN KEY(COUNTRY_REGION_ID) REFERENCES TARGET.REGION(COUNTRY_REGION_ID)
);

CREATE TABLE TARGET.COUNTRY
(
  COUNTRY_ID INTEGER
, COUNTRY_SUBREGION_ID INTEGER
, COUNTRY_NAME VARCHAR(100)
, PRIMARY KEY(COUNTRY_ID)
, FOREIGN KEY(COUNTRY_SUBREGION_ID) REFERENCES TARGET.SUBREGION(COUNTRY_SUBREGION_ID)
);

CREATE TABLE TARGET.STATE
(
  STATE_ID INTEGER
, COUNTRY_ID INTEGER
, CUST_STATE_PROVINCE VARCHAR(40)
, PRIMARY KEY(STATE_ID)
, FOREIGN KEY(COUNTRY_ID) REFERENCES TARGET.COUNTRY(COUNTRY_ID)
);

CREATE TABLE TARGET.CITY
(
  CITY_ID INTEGER
, STATE_ID INTEGER
, CUST_CITY VARCHAR(30) NOT NULL
, PRIMARY KEY(CITY_ID)
, FOREIGN KEY(STATE_ID) REFERENCES TARGET.STATE(STATE_ID)
);

CREATE TABLE TARGET.CUSTOMERS
(
  CUST_ID INTEGER
, CITY_ID INTEGER NOT NULL
, CUST_FIRST_NAME VARCHAR(20) NOT NULL
, CUST_LAST_NAME VARCHAR(40) NOT NULL
, CUST_GENDER VARCHAR(1)
, CUST_MAIN_PHONE_NUMBER VARCHAR(25)
, CUST_EMAIL VARCHAR(30)
, CUST_STREET_ADDRESS VARCHAR(40) NOT NULL
, CUST_POSTAL_CODE  INTEGER NOT NULL
, CUST_YEAR_OF_BIRTH INTEGER
, CUST_MARITAL_STATUS VARCHAR(20)
, CUST_INCOME_LEVEL VARCHAR(50)
, CUST_CREDIT_LIMIT INTEGER
, PRIMARY KEY(CUST_ID)
, FOREIGN KEY(CITY_ID) REFERENCES TARGET.CITY(CITY_ID)
, CHECK(CUST_GENDER IN ('M' , 'F' , 'O'))
, CHECK(CUST_MARITAL_STATUS IN ('Not sure', 'Divorced', 'Single', 'Widowed', 'Married'))
);

CREATE TABLE TARGET.PROD_CATEGORY
(
  PROD_CATEGORY_ID INTEGER
, PROD_CATEGORY VARCHAR(50) NOT NULL
, PROD_CAT_DESC VARCHAR(2000) NOT NULL
, PRIMARY KEY(PROD_CATEGORY_ID)
);

CREATE TABLE TARGET.PROD_SUBCATEGORY
(
  PROD_SUBCATEGORY_ID INTEGER
, PROD_CATEGORY_ID INTEGER
, PROD_SUBCATEGORY VARCHAR(50)
, PROD_SUBCAT_DESC VARCHAR(2000)
, PRIMARY KEY(PROD_SUBCATEGORY_ID)
, FOREIGN KEY(PROD_CATEGORY_ID) REFERENCES TARGET.PROD_CATEGORY(PROD_CATEGORY_ID)
);

CREATE TABLE TARGET.PRODUCTS
(
  PROD_ID INTEGER
, PROD_SUBCATEGORY_ID INTEGER NOT NULL
, PROD_NAME VARCHAR(100) NOT NULL
, PROD_DESC VARCHAR(400) NOT NULL
, PROD_WEIGHT_CLASS INTEGER
, PROD_UNIT_OF_MEASURE VARCHAR(20)
, PROD_PACK_SIZE VARCHAR(30)
, PROD_LIST_PRICE FLOAT NOT NULL
, PROD_MIN_PRICE FLOAT NOT NULL
, PRIMARY KEY(PROD_ID)
, FOREIGN KEY(PROD_SUBCATEGORY_ID) REFERENCES TARGET.PROD_SUBCATEGORY(PROD_SUBCATEGORY_ID)
, CHECK(PROD_LIST_PRICE >= PROD_MIN_PRICE)
);

CREATE TABLE TARGET.PROMO_CATEGORY
(
  PROMO_CATEGORY_ID INTEGER
, PROMO_CATEGORY VARCHAR(30) NOT NULL
, PRIMARY KEY(PROMO_CATEGORY_ID)
);

CREATE TABLE TARGET.PROMO_SUBCATEGORY
(
  PROMO_SUBCATEGORY_ID INTEGER
, PROMO_CATEGORY_ID INTEGER NOT NULL
, PROMO_SUBCATEGORY VARCHAR(30) NOT NULL
, PRIMARY KEY(PROMO_SUBCATEGORY_ID)
, FOREIGN KEY(PROMO_CATEGORY_ID) REFERENCES TARGET.PROMO_CATEGORY(PROMO_CATEGORY_ID)
);

CREATE TABLE TARGET.PROMOTIONS
(
  PROMO_ID INTEGER
, PROMO_SUBCATEGORY_ID INTEGER
, PROMO_NAME VARCHAR(30) NOT NULL
, PROMO_COST FLOAT NOT NULL
, PROMO_BEGIN_DATE DATE NOT NULL
, PROMO_END_DATE DATE NOT NULL
, PRIMARY KEY(PROMO_ID)
, FOREIGN KEY(PROMO_SUBCATEGORY_ID) REFERENCES TARGET.PROMO_SUBCATEGORY(PROMO_SUBCATEGORY_ID)
, CHECK (PROMO_END_DATE >= PROMO_BEGIN_DATE)
);
